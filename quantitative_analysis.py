#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Feb 23 17:16:10 2024

@author: dungdinh
"""

#Importing libraries
import pandas as pd
import matplotlib.pyplot as plt

def dataset_characteristics():
    weekdays = ['2023-12-05', '2023-11-07', '2023-10-17', '2023-09-26', '2023-08-01',
             '2023-07-04', '2023-06-13', '2023-05-23', '2023-04-11', '2023-03-14',
             '2023-02-07', '2022-12-20', '2022-11-08', '2022-10-11', '2022-09-06',
             '2022-08-16', '2022-07-19', '2022-06-14', '2022-05-10', '2022-04-19',
             '2022-03-15', '2022-02-22', '2022-01-04', '2019-01-08', '2019-02-12',
             '2019-03-19', '2019-04-23', '2019-05-14', '2019-06-04', '2019-07-02',
             '2019-08-27', '2019-09-17', '2019-10-15', '2019-12-17', '2019-12-24',
             '2019-01-09', '2019-02-13', '2019-03-20', '2019-04-03', '2019-05-22',
             '2019-06-12', '2019-07-10', '2019-08-21', '2019-09-18', '2019-10-23',
             '2019-11-27', '2019-12-18', '2022-01-12', '2022-02-09', '2022-03-16',
             '2022-04-27', '2022-05-18', '2022-06-01', '2022-07-13', '2022-08-24',
             '2022-09-28', '2022-10-05', '2022-11-02', '2022-12-21', '2023-02-08',
             '2023-03-22', '2023-04-19', '2023-05-31', '2023-06-21', '2023-07-12',
             '2023-08-16', '2023-09-20', '2023-10-25', '2023-11-22', '2023-12-06',
             '2023-02-09', '2023-03-16', '2023-04-13', '2023-05-25', '2023-06-15',
             '2023-07-27', '2023-08-24', '2023-09-21', '2023-10-19', '2023-11-09',
             '2023-12-28', '2022-01-06', '2022-02-10', '2022-03-31', '2022-04-21',
             '2022-05-26', '2022-06-16', '2022-07-29', '2022-08-18', '2022-09-08',
             '2022-10-21', '2022-11-04', '2022-12-23', '2019-01-03', '2019-02-14',
             '2019-03-21', '2019-04-18', '2019-05-23', '2019-06-20', '2019-07-11',
             '2019-08-22', '2019-09-12', '2019-10-31', '2019-11-28', '2019-12-05',
             '2019-01-04', '2019-02-22', '2019-03-15', '2019-04-26', '2019-06-28',
             '2019-05-24', '2019-07-19', '2019-08-16', '2019-09-06', '2019-10-04',
             '2019-11-29', '2019-12-13', '2022-01-07', '2022-02-18', '2022-03-25',
             '2022-04-22', '2022-05-13', '2022-06-03', '2022-07-29', '2022-08-12',
             '2022-09-30', '2022-10-07', '2022-11-25', '2022-12-23', '2023-01-27',
             '2023-02-24', '2023-03-31', '2023-04-14', '2023-05-19', '2023-06-09',
             '2023-07-07', '2023-08-11', '2023-09-08', '2023-10-27', '2023-11-10',
             '2023-12-15', '2023-11-07', '2024-01-30', '2024-02-01', '2024-02-16', 
             '2024-02-19']
    weekends = ['2023-01-14', '2023-02-18', '2023-03-25', '2023-04-01','2023-05-20', 
                '2023-06-24', '2023-07-29', '2023-08-12', '2023-09-16',
             '2023-10-21', '2023-11-18', '2023-12-30', '2023-01-29', '2023-02-26',
             '2023-03-12', '2023-04-02', '2023-05-21', '2023-06-11', '2023-07-09',
             '2023-08-06', '2023-09-24', '2023-10-08', '2023-11-12', '2023-12-31',
             '2022-01-21', '2022-01-30', '2022-02-12', '2022-02-27', '2022-03-26',
             '2022-03-13', '2022-04-30', '2022-04-10', '2022-05-14', '2022-05-15',
             '2022-06-18', '2022-06-05', '2022-07-23', '2022-07-17', '2022-08-20',
             '2022-08-21', '2022-09-24', '2022-09-04', '2022-10-22', '2022-10-16',
             '2022-11-26', '2022-11-27', '2022-12-31', '2022-12-11', '2019-01-26',
             '2019-01-06', '2019-02-23', '2019-02-24', '2019-03-09', '2019-03-17',
             '2019-04-06', '2019-04-07', '2019-05-11', '2019-05-26', '2019-06-01',
             '2019-06-30', '2019-07-13', '2019-07-28', '2019-08-24', '2019-08-25',
             '2019-09-21', '2019-09-01', '2019-10-12', '2019-10-20', '2019-11-09',
             '2019-11-10', '2019-12-07', '2019-12-15', '2024-02-18',
             '2023-01-15', '2023-01-28', '2023-02-04', '2023-02-05', '2023-02-11',
             '2023-02-12', '2023-02-19', '2023-02-25', '2023-03-04', '2023-03-05',
             '2023-03-11', '2023-03-18', '2023-03-26', '2023-04-08', '2023-04-09',
             '2023-04-15', '2023-04-16', '2023-04-23', '2023-04-29', '2023-05-06',
             '2023-05-07', '2023-05-13', '2023-05-14', '2023-05-27', '2023-05-28',
             '2023-06-03', '2023-06-04', '2023-06-10', '2023-06-17', '2023-06-18',
             '2023-06-25', '2023-07-01', '2023-07-02', '2023-07-08', '2023-07-15',
             '2023-07-16', '2023-07-22', '2023-07-23', '2023-07-30', '2023-08-05',
             '2023-08-13', '2023-08-19', '2023-08-20', '2023-08-26', '2023-08-27',
             '2023-09-02', '2023-09-03', '2023-09-09', '2023-09-10', '2023-09-17',
             '2023-09-23', '2023-09-30', '2023-10-01', '2023-10-07', '2023-10-14',
             '2023-10-15', '2023-10-22', '2023-10-28', '2023-10-29', '2023-11-04',
             '2023-11-05', '2023-11-19', '2023-11-25', '2023-11-26', '2023-12-02',
             '2023-12-03', '2023-12-09', '2023-12-10', '2023-12-17', '2023-12-23',
             '2022-01-08', '2022-01-09', '2022-01-15']
    holidays = ['2024-01-01', '2023-12-31', '2023-12-30', '2023-12-25', '2023-12-24', '2023-12-16',				
                '2023-11-11', '2023-10-21', '2023-08-09', '2023-08-08', '2023-06-29', '2023-06-28',				
                '2023-06-02', '2023-06-01', '2023-12-28', '2019-10-27', '2019-10-26', '2019-10-28',				
                '2019-12-24', '2019-12-25', '2023-01-21', '2023-01-22', '2023-01-23', '2023-01-24',				
                '2023-04-21', '2023-04-22', '2023-04-30', '2023-05-01', '2023-05-02']
    
    print(len(weekends))
# dataset_characteristics()

def should_go_analysis(terminal):
   data = pd.read_csv('./' + terminal + '_congestion/' + terminal + '_queue_all_days_avg_combined_5m.csv')
   data['month'] = [i[5:7] for i in data['date']]
   should_go_data = data.loc[(data['sum'] >20)]
   print(len(should_go_data)/len(data))
   
   # measurement = 'month'
   
   # number_of_durations = should_go_data.groupby(measurement)['sum'].count()
   
   # # print(number_of_durations.keys)
   
   # # creating the bar plot
   # plt.bar(number_of_durations.index, number_of_durations.values, color ='maroon')
   
   # plt.xticks(range(len(number_of_durations.index)), number_of_durations.index)
   
   # # Adding values on top of each bar
   # for i in range(len(number_of_durations.index)):
   #      plt.text(number_of_durations.index[i], number_of_durations.values[i], str(number_of_durations.values[i]), ha='center', va='bottom')
   
should_go_analysis('t4')
    